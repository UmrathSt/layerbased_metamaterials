function [CSX, port] = definePBCPorts(CSX, mesh, f_start, f0, unit, polarization, phi_xy, theta_z);
  physical_constants;
  n_cells_to_edge = 20;
  p1 = [mesh.x(1), mesh.y(1), mesh.z(n_cells_to_edge)];
  lambda_max = C0/f_start;
  k0 = 2*pi*f0/c0;
  [zmax, idx] = min(abs(mesh.z+lambda_max/3));
  p2 = [mesh.x(end), mesh.y(end), mesh.z(n_cells_to_edge+2)];
  p3 = p1;
  p4 = [mesh.x(end), mesh.y(end), mesh.z(end-n_cells_to_edge)];
  k = unit*k0*[sin(theta_z)*cos(phi_xy), sin(theta_z)*sin(phi_xy), cos(theta_z)];
  if strcmp(polarization.name, "TE");
    display("TE POLARIZED PBC Excitation \n");
    E = [cos(polarization.angle), sin(polarization.angle), 0];
    func_E{1} = ["(" num2str(cos(polarization.angle)) ")*cos((" num2str(k(1)) ")*x)"];
    func_E{2} = ["(" num2str(sin(polarization.angle)) ")*cos((" num2str(k(2)) ")*y)"];
    func_E{3} = "0";
    H = cross(k, E);
    func_H{1} = ["(" num2str(H(1)) ")*cos((" num2str(k(1)) ")*x)"];
    func_H{2} = ["(" num2str(H(2)) ")*cos((" num2str(k(2)) ")*y)"];
    func_H{3} = ["(" num2str(H(3)) ")*cos((" num2str(k(3)) ")*z)"];
  elseif strcmp(polarization.name, "TM");
    display("TM POLARIZED PBC Excitation \n");
    H = [cos(polarization.angle), sin(polarization.angle), 0];
    func_H{1} = ["(" num2str(cos(polarization.angle)) ")*cos((" num2str(k(1)) ")*x)"];
    func_H{2} = ["(" num2str(sin(polarization.angle)) ")*cos((" num2str(k(2)) ")*y)"];
    func_H{3} = "0";
    E = cross(H, k);
    func_E{1} = ["-(" num2str(H(1)) ")*cos((" num2str(k(1)) ")*x)"];
    func_E{2} = ["-(" num2str(H(2)) ")*cos((" num2str(k(2)) ")*y)"];
    func_E{3} = ["-(" num2str(H(3)) ")*cos((" num2str(k(3)) ")*z)"];
  endif;
  [CSX, port{1}] = AddWaveGuidePort(CSX, 10, 1, p1, p2, 2, func_E, func_H, 1, 1);
  [CSX, port{2}] = AddWaveGuidePort(CSX, 10, 2, p3, p4, 2, func_E, func_H, 1, 0);
  endfunction;